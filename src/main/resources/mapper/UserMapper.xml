<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.entity.User">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="salt" jdbcType="VARCHAR" property="salt" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="realname" jdbcType="VARCHAR" property="realname" />
    <result column="headImgUrl" jdbcType="VARCHAR" property="headimgurl" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="telephone" jdbcType="VARCHAR" property="telephone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="birthday" jdbcType="TIMESTAMP" property="birthday" />
    <result column="sex" jdbcType="INTEGER" property="sex" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="cscode" jdbcType="VARCHAR" property="cscode" />
    <result column="xqcode" jdbcType="VARCHAR" property="xqcode" />
    <result column="usertype" jdbcType="VARCHAR" property="usertype" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="bak1" jdbcType="VARCHAR" property="bak1" />
    <result column="bak2" jdbcType="VARCHAR" property="bak2" />
    <result column="bak3" jdbcType="INTEGER" property="bak3" />
  </resultMap>
  <resultMap id="UserRoleResultMap" type="com.dto.UserDto">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="salt" jdbcType="VARCHAR" property="salt" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="realname" jdbcType="VARCHAR" property="realname" />
    <result column="headImgUrl" jdbcType="VARCHAR" property="headimgurl" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="telephone" jdbcType="VARCHAR" property="telephone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="birthday" jdbcType="TIMESTAMP" property="birthday" />
    <result column="sex" jdbcType="INTEGER" property="sex" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="cscode" jdbcType="VARCHAR" property="cscode" />
    <result column="xqcode" jdbcType="VARCHAR" property="xqcode" />
    <result column="usertype" jdbcType="VARCHAR" property="usertype" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="bak1" jdbcType="VARCHAR" property="bak1" />
    <result column="bak2" jdbcType="VARCHAR" property="bak2" />
    <result column="bak3" jdbcType="INTEGER" property="bak3" />
    <collection property="roleList" javaType="ArrayList" ofType="com.dto.RoleDto">
      <id column="roleid" jdbcType="INTEGER" property="id"/>
      <result column="rolename" jdbcType="VARCHAR" property="name"/>
      <result column="roledescription" jdbcType="VARCHAR" property="roledescription"/>
      <collection property="permissionList" javaType="ArrayList" ofType="com.entity.Permission">
        <id column="perid" jdbcType="BIGINT" property="id"/>
        <result column="parentid" jdbcType="INTEGER" property="parentid"/>
        <result column="pername" jdbcType="VARCHAR" property="name"/>
        <result column="css" jdbcType="VARCHAR" property="css"/>
        <result column="href" jdbcType="VARCHAR" property="href"/>
        <result column="permissiontype" jdbcType="INTEGER" property="permissiontype"/>
        <result column="permission" jdbcType="VARCHAR" property="permission"/>
        <result column="sort" jdbcType="INTEGER" property="sort"/>
      </collection>
    </collection>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, username, password, salt, nickname, realname, headImgUrl, phone, telephone, email, 
    birthday, sex, status, cscode, xqcode, usertype, createTime, bak1, bak2, bak3
  </sql>
 <select id="getUserRoleByUserName" resultMap="UserRoleResultMap">
   select u.id as id,u.password,u.salt,u.username,u.nickname,u.realname,u.headimgurl,u.phone,u.sex,u.status,
    u.usertype,r.id as roleid,r.name as rolename, r.roledescription,p.id as perid,p.parentid,p.name as pername,p.href,p.permissiontype,
    p.permission,p.sort from  t_user u
    left join  t_user_role ru  on u.id=ru.userId
    left join  t_role r  on ru.roleId=r.id left join  t_role_permission rp  on r.id=rp.roleId
     left join t_permission p  on rp.permissionId=p.id  where u.username=#{username} order by p.sort
 </select>
  <select id="getUserByUserName" resultMap="BaseResultMap">
    select id,username,usertype from t_user where username=#{username}
  </select>

  <select id="selectByExample" parameterType="com.entity.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.entity.UserExample">
    delete from t_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.entity.User">
    insert into t_user (id, username, password, 
      salt, nickname, realname, 
      headImgUrl, phone, telephone, 
      email, birthday, sex, 
      status, cscode, xqcode, 
      usertype, createTime, bak1, 
      bak2, bak3)
    values (#{id,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{salt,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, #{realname,jdbcType=VARCHAR}, 
      #{headimgurl,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{telephone,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{birthday,jdbcType=TIMESTAMP}, #{sex,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{cscode,jdbcType=VARCHAR}, #{xqcode,jdbcType=VARCHAR}, 
      #{usertype,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, #{bak1,jdbcType=VARCHAR}, 
      #{bak2,jdbcType=VARCHAR}, #{bak3,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.entity.User">
    insert into t_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="salt != null">
        salt,
      </if>
      <if test="nickname != null">
        nickname,
      </if>
      <if test="realname != null">
        realname,
      </if>
      <if test="headimgurl != null">
        headImgUrl,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="telephone != null">
        telephone,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="cscode != null">
        cscode,
      </if>
      <if test="xqcode != null">
        xqcode,
      </if>
      <if test="usertype != null">
        usertype,
      </if>
      <if test="createtime != null">
        createTime,
      </if>
      <if test="bak1 != null">
        bak1,
      </if>
      <if test="bak2 != null">
        bak2,
      </if>
      <if test="bak3 != null">
        bak3,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="realname != null">
        #{realname,jdbcType=VARCHAR},
      </if>
      <if test="headimgurl != null">
        #{headimgurl,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="cscode != null">
        #{cscode,jdbcType=VARCHAR},
      </if>
      <if test="xqcode != null">
        #{xqcode,jdbcType=VARCHAR},
      </if>
      <if test="usertype != null">
        #{usertype,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="bak1 != null">
        #{bak1,jdbcType=VARCHAR},
      </if>
      <if test="bak2 != null">
        #{bak2,jdbcType=VARCHAR},
      </if>
      <if test="bak3 != null">
        #{bak3,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.entity.UserExample" resultType="java.lang.Long">
    select count(*) from t_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.salt != null">
        salt = #{record.salt,jdbcType=VARCHAR},
      </if>
      <if test="record.nickname != null">
        nickname = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.realname != null">
        realname = #{record.realname,jdbcType=VARCHAR},
      </if>
      <if test="record.headimgurl != null">
        headImgUrl = #{record.headimgurl,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.telephone != null">
        telephone = #{record.telephone,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null">
        birthday = #{record.birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.cscode != null">
        cscode = #{record.cscode,jdbcType=VARCHAR},
      </if>
      <if test="record.xqcode != null">
        xqcode = #{record.xqcode,jdbcType=VARCHAR},
      </if>
      <if test="record.usertype != null">
        usertype = #{record.usertype,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null">
        createTime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.bak1 != null">
        bak1 = #{record.bak1,jdbcType=VARCHAR},
      </if>
      <if test="record.bak2 != null">
        bak2 = #{record.bak2,jdbcType=VARCHAR},
      </if>
      <if test="record.bak3 != null">
        bak3 = #{record.bak3,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_user
    set id = #{record.id,jdbcType=BIGINT},
      username = #{record.username,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      salt = #{record.salt,jdbcType=VARCHAR},
      nickname = #{record.nickname,jdbcType=VARCHAR},
      realname = #{record.realname,jdbcType=VARCHAR},
      headImgUrl = #{record.headimgurl,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      telephone = #{record.telephone,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      birthday = #{record.birthday,jdbcType=TIMESTAMP},
      sex = #{record.sex,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      cscode = #{record.cscode,jdbcType=VARCHAR},
      xqcode = #{record.xqcode,jdbcType=VARCHAR},
      usertype = #{record.usertype,jdbcType=VARCHAR},
      createTime = #{record.createtime,jdbcType=TIMESTAMP},
      bak1 = #{record.bak1,jdbcType=VARCHAR},
      bak2 = #{record.bak2,jdbcType=VARCHAR},
      bak3 = #{record.bak3,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.entity.User">
    update t_user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="realname != null">
        realname = #{realname,jdbcType=VARCHAR},
      </if>
      <if test="headimgurl != null">
        headImgUrl = #{headimgurl,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        telephone = #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="cscode != null">
        cscode = #{cscode,jdbcType=VARCHAR},
      </if>
      <if test="xqcode != null">
        xqcode = #{xqcode,jdbcType=VARCHAR},
      </if>
      <if test="usertype != null">
        usertype = #{usertype,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="bak1 != null">
        bak1 = #{bak1,jdbcType=VARCHAR},
      </if>
      <if test="bak2 != null">
        bak2 = #{bak2,jdbcType=VARCHAR},
      </if>
      <if test="bak3 != null">
        bak3 = #{bak3,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.entity.User">
    update t_user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      realname = #{realname,jdbcType=VARCHAR},
      headImgUrl = #{headimgurl,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      telephone = #{telephone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=TIMESTAMP},
      sex = #{sex,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      cscode = #{cscode,jdbcType=VARCHAR},
      xqcode = #{xqcode,jdbcType=VARCHAR},
      usertype = #{usertype,jdbcType=VARCHAR},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      bak1 = #{bak1,jdbcType=VARCHAR},
      bak2 = #{bak2,jdbcType=VARCHAR},
      bak3 = #{bak3,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>